/*utils mixins start*/

//inline block
@mixin inline-block {
    display: inline-block;
    *display: inline;
    *zoom: 1;
}

//clearfix placeholder
%clearfix {
    *zoom: 1;
    &:after {
        content: '\0020';
        visibility: hidden;
        height: 0;
        display: block;
        clear: both;
    }
}
//font-size
@function calculateRem($size) {
    $remSize: $size / $font-size;
    @return $remSize * 1rem;
}
@mixin font-size($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

//browser prefix
//http://css-tricks.com/do-we-need-box-shadow-prefixes/
@mixin browser-prefix($name, $args...) {
  @each $browser in ('-webkit-', '-moz-', '-ms-', '-o-', '') {
    #{$browser}#{$name}: $args;
  }
}

//animate
@mixin keyframes($animation-name) {
    @-webkit-keyframes $animation-name {
        @content;
    }
    @-moz-keyframes $animation-name {
        @content;
    }
    @-ms-keyframes $animation-name {
        @content;
    }
    @-o-keyframes $animation-name {
        @content;
    }
    @keyframes $animation-name {
        @content;
    }
}
@mixin animation($str) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -ms-animation: #{$str};
    -o-animation: #{$str};
    animation: #{$str};
}

//transition
@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
    transition: $args;
}

//transform
@mixin transform($args...) {
    -webkit-transform: $args;
    -moz-transform: $args;
    -ms-transform: $args;
    -o-transform: $args;
    transform: $args;
}

//box-shadow 主流的浏览器目前都支持不带前缀的属性，andriod 2.3- 需要前缀
@mixin box-shadow($args...) {
    -webkit-box-shadow: $args;
    box-shadow: $args;
}

@mixin opacity($opacity-val) {
    $perc: $opacity-val * 100;
    /* IE 8 */
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$perc})";
    /* IE 5-7 */
    filter: alpha(opacity=$perc);
    /*standard*/
    opacity: $opacity-val;
}

//image replacement
@mixin hide-text {
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
}

/*utils mixins end*/

//button
@mixin btn-variant($color, $bg, $radius) {
    color: $color;
    background-color: $bg;
    border-radius: $radius;
    @include box-shadow( 2px 2px 3px #eee);
    @if $lte7 {
        &:hover, &-hover {
            color: $color;
            text-decoration: none;
            background-color: darken($bg, 10%);
        }
        &:active, &-active {
            color: $color;
            text-decoration: none;
            background-color: darken($bg, 15%);
            @include box-shadow( inset 0 3px 5px rgba(0, 0, 0, .125) );
        }
        &:disabled, &-dis {
            color: $color;
            text-decoration: none;
            pointer-events: none;
            background-color: #999;
        }
    }
    @else {
        &:hover, &.btn-hover {
            color: $color;
            text-decoration: none;
            background-color: darken($bg, 10%);
        }
        &:active, &.btn-active {
            color: $color;
            text-decoration: none;
            background-color: darken($bg, 15%);
            @include box-shadow( inset 0 3px 5px rgba(0, 0, 0, .125) );
        }
        &:disabled, &.btn-dis {
            color: $color;
            text-decoration: none;
            pointer-events: none;
            background-color: #999;
        }
    }
}

//alert
@mixin alert-variant($color, $bg, $border, $radius) {
    padding: 1em 1.5em;
    line-height: 1.3;
    margin-bottom: 10px;
    border: 1px solid transparent;
    color: $color;
    background-color: $bg;
    border: 1px solid $border;
    border-radius: $radius;
    word-wrap: break-word;
    word-break: break-all;
    @include box-shadow( 0 1px 2px 0 rgba(0, 0, 0, .05) );
    @include transform( opacity .2s ease, color .2s ease, background .2s ease, box-shadow .2s ease );
}

@mixin arrow($outer, $inner, $arrow: left, $no-border: false){
    @if($no-border == noborder) {
        $outer : $inner;
    }
    @if($arrow == left){
        $indent : right;
        $pos: top;
    } @else if($arrow == right){
        $indent : left;
        $pos: top;
    } @else if($arrow == top){
        $indent : bottom;
        $pos: left;
    } @else if($arrow == bottom){
        $indent : top;
        $pos: left;
    }
    
    .tip-caret{
        position: absolute;
        #{$pos}: 9px;
        #{$arrow}: -7px;
        font-size: 0;
        line-height: 0;

        i {
            position: absolute; 
            overflow: hidden; 
            width: 0; 
            height: 0; 
            font-style: normal;
            border-width: 7px; 
            border-style: dashed;
            border-#{$arrow}-width: 0;
            border-#{$indent}-style: solid;
        }

        .caret-outer{
            position: absolute;
            #{$arrow}: -1px; 
            border-color: transparent;
            border-#{$indent}-color: $outer;

        }
        .caret-inner{
            position: absolute;
            #{$arrow}: 0; 
            border-color: transparent;
            border-#{$indent}-color: $inner;
        }
    }
}

//tip
@mixin tip-variant($color, $bg, $border-color, $radius, $arrow: left, $no-border: false) {
    @if($no-border == noborder) {
        $border-color: $bg;
    }
    .tip-inner {
        border: solid 1px $border-color;
        box-shadow: 3px 3px inset #fc0;
        background: $bg;
        .tip-cont {
            color: $color;
            background: $bg;
        }
        @include arrow($border-color, $bg, $arrow, $no-border);
    }
}
